Verify Completion of scheduling task.

It's very easy to verify that jobs were executed correctly 

$ crontab -e
* * * * * /bin/echo "Just testing cron"
* * * * * /bin/echo "Just testing cron again"


* * * * * means every minute

$ sudo cat /var/log/cron
Here you can see the echo commands



THis is very useful because this way we'll be sure not only the command will be executed but also the command will be executed correctly
Now remove the crontab for our user

$ crontab -r

In orde to check only the log generated by our job (since cron log all the data, even when you change or delete crontab) is to grep for CMD

$ sudo grep CMD /var/log/cron

This is how we can verify cron job. If we want to take a closer look at the system wide crontab

$ cat /etc/crontab

You can see that there is MAILTO option

MAILTO=root


The interesting part of this is that it's goiung to send mail to the user when something is completed. System can be configured in such a way that every user has thier own local mailbox, which they access after they have logged in. 

We can configure that mail both in cron and in anacron.

Now let's take a look of anacron 

$ sudo vim /etc/anacrontab

We still have MAILTO

There is a way to force ANacron to go ahead and run all of the job that are scheduled for today 

$ sudo anacron -n 

To check all the logs in anacron 

$ sudo grep anacron /var/log/cron

This way we will see all the command run under anacron. Or:

$ sudo grep anacron /var/log/cron | less

this way we can look up or down by using arrows

Or we can even search for the name of our job

$ sudo grep test_job

Now edit the anacron tab

$ sudo vi /etc/anacrontab


and after our command we add a pipe

1 	10	test_job	/bin/echo "Testing anacron" | systemd-cat --indetifier=test_job


This way we can find our log in our journalctl or /var/log 

If now we run anacron -n it won't work because it runs the job already today.

So we have to tell anacron to rerun each hob

$ sudo anacron -n -f

If now see the journal

$ journalctl 

We can of course use the at command as well

$ at 'now + 1 minute'
at> echo "My at job produced this output"
at> <EOT>

$ sudo grep atd /var/log/cron

Or better

$ at 'now + 1 minute'
at> echo "My at job produced this output" | systemd-cat --identifier=at_scheduled_backup
at> <EOT>


Now we'are going to look at that through journalctl


N.B. Rembeber this command grep <what you are looking for> <path to the file>

If your OS don't use /var/log/cron you shoudl find messages about scheduled jobs in /var/log/messages or /var/sys/log
